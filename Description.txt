Insertion Sort:

  -> one element from the input elements is consumed in each iteration to find its correct position i.e, the position to which it belongs in a sorted array
  -> It iterates the input elements by growing the sorted array at each iteration. It compares the current element with the largest value in the sorted array. 
  -> If the current element is greater, then it leaves the element in its place and moves on to the next element else it finds its correct position in the sorted array and          moves it to that position. 
  -> This is done by shifting all the elements, which are larger than the current element, in the sorted array to one position ahead
  
  
Bubble Sort:
  
  -> Adjacent elements are compared and swapped if they exist in the wrong order
  -> In every iteration, the highest element (or smallest element, as per order) is "bubbled" to the end of the array and is not scanned for the next iteration, as its               position is finalized
  -> Iterations continue until all elements are swapped and placed in their final positions
    
    
Proposed Mixed Sort:
   
  -> The input array is split into two halves
  -> Bubble sort is performed on each half
  -> Insertion sort is performed, by taking elements from the second half and inserting them in the first following the Insertion Sort protocol
